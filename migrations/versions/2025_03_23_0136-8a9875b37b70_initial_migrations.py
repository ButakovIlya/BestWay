"""initial migrations

Revision ID: 8a9875b37b70
Revises: 
Create Date: 2025-03-23 01:36:12.695666

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "8a9875b37b70"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "places",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "category",
            sa.Enum(
                "RESTAURANT",
                "CAFE",
                "MUSEUM",
                "LANDMARKS",
                "INSTA_PLACES",
                "GALLERY",
                "THEATER",
                "WATER_PROCEDURES",
                "SKI_RESORTS",
                "MASTER_CLASSES",
                "DRIVE",
                "RELAX",
                "NIGHT_LIFE",
                "HOTELS",
                "WALK",
                "EVENTS",
                "FOR_KIDS",
                name="place_category",
                native_enum=False,
            ),
            nullable=False,
        ),
        sa.Column(
            "type",
            sa.Enum(
                "GEORGIAN",
                "ITALIAN",
                "CAFE_KAFE",
                "JUST_CAFE",
                "LOCAL_HISTORY",
                "MODERN_ART",
                "MILITARY",
                "MEMORIAL",
                "HISTORICAL",
                "FAMOUS_PEOPLE",
                "RETRO_CARS",
                "CHILDREN",
                "ETHNOGRAPHIC",
                "TECHNICAL",
                "PLANETARIUM",
                "ART",
                "PRIVATE",
                "PERM_ARTISTS",
                "MUSICAL",
                "DRAMA",
                "BALLET",
                "CONCERT",
                "SHADOW_THEATER",
                "OPERA",
                "ECCENTRIC_COMEDY",
                "CHILDREN_PERFORMANCE",
                "COMEDY",
                "CONTEMPORARY_DRAMA",
                "MULTICULTURAL",
                "DOCUMENTARY",
                "FAIRY_TALE",
                "SATIRE",
                "POSTER_PERFORMANCE",
                "WP_SPA",
                "GUBAKHA",
                "TAKMAN",
                "ZHEBREI",
                "POTTERY",
                "MC_ART",
                "JEWELRY",
                "KARTING",
                "ROPE_PARK",
                "MASSAGE",
                "SPA",
                "CLUB",
                "BAR",
                "ONE_STAR",
                "TWO_STARS",
                "THREE_STARS",
                "FOUR_STARS",
                "FIVE_STARS",
                "PARK",
                "GARDEN",
                "CONCERTS",
                "PERFORMANCES",
                "ZOO",
                "FUN_PARK",
                name="place_type",
                native_enum=False,
            ),
            nullable=True,
        ),
        sa.Column("tags", sa.String(), nullable=True),
        sa.Column("coordinates", sa.String(), nullable=True),
        sa.Column("photo", sa.String(), nullable=True),
        sa.Column("map_name", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_places_name"), "places", ["name"], unique=False)
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("phone", sa.String(), nullable=True),
        sa.Column("first_name", sa.String(), nullable=True),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.Column("middle_name", sa.String(), nullable=True),
        sa.Column("registration_date", sa.DateTime(), nullable=True),
        sa.Column("is_banned", sa.Boolean(), nullable=True),
        sa.Column("is_admin", sa.Boolean(), nullable=True),
        sa.Column("photo", sa.String(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_first_name"), "users", ["first_name"], unique=False)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_index(op.f("ix_users_last_name"), "users", ["last_name"], unique=False)
    op.create_index(op.f("ix_users_middle_name"), "users", ["middle_name"], unique=False)
    op.create_index(op.f("ix_users_phone"), "users", ["phone"], unique=True)
    op.create_table(
        "routes",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("author_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default="now()", nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default="now()", nullable=False),
        sa.Column("duration", sa.Integer(), nullable=True),
        sa.Column("distance", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["author_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_routes_name"), "routes", ["name"], unique=False)
    op.create_table(
        "likes",
        sa.Column("author_id", sa.Integer(), nullable=False),
        sa.Column("route_id", sa.Integer(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(["route_id"], ["routes.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "route_comments",
        sa.Column("author_id", sa.Integer(), nullable=False),
        sa.Column("route_id", sa.Integer(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.Column("comment", sa.String(), nullable=True),
        sa.Column("photo", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(["route_id"], ["routes.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "route_places",
        sa.Column("route_id", sa.Integer(), nullable=False),
        sa.Column("place_id", sa.Integer(), nullable=False),
        sa.Column("order", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["place_id"],
            ["places.id"],
        ),
        sa.ForeignKeyConstraint(["route_id"], ["routes.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("route_places")
    op.drop_table("route_comments")
    op.drop_table("likes")
    op.drop_index(op.f("ix_routes_name"), table_name="routes")
    op.drop_table("routes")
    op.drop_index(op.f("ix_users_phone"), table_name="users")
    op.drop_index(op.f("ix_users_middle_name"), table_name="users")
    op.drop_index(op.f("ix_users_last_name"), table_name="users")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_first_name"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_places_name"), table_name="places")
    op.drop_table("places")
    # ### end Alembic commands ###
