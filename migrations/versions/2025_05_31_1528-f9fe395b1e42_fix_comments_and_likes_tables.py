"""fix comments and likes tables

Revision ID: f9fe395b1e42
Revises: 2da9057e6b90
Create Date: 2025-05-31 15:28:41.593826

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "f9fe395b1e42"
down_revision: Union[str, None] = "2da9057e6b90"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "comments",
        sa.Column("author_id", sa.Integer(), nullable=False),
        sa.Column("route_id", sa.Integer(), nullable=True),
        sa.Column("place_id", sa.Integer(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.Column("comment", sa.String(), nullable=False),
        sa.Column("photo", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["author_id"], ["users.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["place_id"], ["places.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["route_id"], ["routes.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("route_comments")
    op.alter_column("likes", "route_id", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column("likes", "place_id", existing_type=sa.INTEGER(), nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("likes", "place_id", existing_type=sa.INTEGER(), nullable=False)
    op.alter_column("likes", "route_id", existing_type=sa.INTEGER(), nullable=False)
    op.create_table(
        "route_comments",
        sa.Column("author_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("route_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("timestamp", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("comment", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("photo", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("place_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["users.id"],
            name="route_comments_author_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["place_id"],
            ["places.id"],
            name="route_comments_place_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["route_id"],
            ["routes.id"],
            name="route_comments_route_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="route_comments_pkey"),
    )
    op.drop_table("comments")
    # ### end Alembic commands ###
