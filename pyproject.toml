[tool.poetry]
name = "bestway"
version = "0.1.0"
description = ""
authors = ["Ilya Butakov <gabellaoff@yandex.ru>"]
readme = "README.md"
packages = [{ include = "src" }]

[tool.poetry.dependencies]
python = ">=3.12,<4.0"
aiocache = "0.12.3"
aiohappyeyeballs = "2.6.1"
aiohttp = "3.11.13"
aiohttp-retry = "2.9.1"
aiosignal = "1.3.2"
alembic = "1.15.1"
amqp = "5.3.1"
annotated-types = "0.7.0"
anyio = "4.8.0"
asgiref = "3.8.1"
async-timeout = "5.0.1"
asyncpg = "0.29.0"
attrs = "25.3.0"
billiard = "4.2.1"
build = "1.2.2.post1"
cachecontrol = "0.14.2"
celery = "5.5.2"
certifi = "2025.1.31"
cfgv = "3.4.0"
charset-normalizer = "3.4.1"
cleo = "2.1.0"
click = "8.1.8"
click-didyoumean = "0.3.1"
click-plugins = "1.1.1"
click-repl = "0.3.0"
colorama = "0.4.6"
coverage = "7.6.12"
crashtest = "0.4.1"
dependency-injector = "4.46.0"
deprecated = "1.2.18"
distlib = "0.3.9"
distro = "1.9.0"
dnspython = "2.7.0"
dulwich = "0.22.8"
email-validator = "2.2.0"
et-xmlfile = "2.0.0"
faker = "28.4.1"
fastapi = "0.115.12"
fastapi-cli = "0.0.7"
fastapi-debug-toolbar = "0.6.3"
fastjsonschema = "2.21.1"
filelock = "3.17.0"
findpython = "0.6.3"
flower = "2.0.1"
frozenlist = "1.5.0"
googleapis-common-protos = "1.69.1"
greenlet = "3.1.1"
grpcio = "1.71.0"
h11 = "0.14.0"
httpcore = "1.0.7"
httptools = "0.6.4"
httpx = "0.27.2"
humanize = "4.12.1"
identify = "2.6.9"
idna = "3.10"
importlib-metadata = "8.4.0"
iniconfig = "2.0.0"
installer = "0.7.0"
isort = "5.13.2"
jaraco-classes = "3.4.0"
jaraco-context = "6.0.1"
jaraco-functools = "4.1.0"
jinja2 = "3.1.6"
jiter = "0.9.0"
keyring = "25.6.0"
kombu = "5.5.3"
mako = "1.3.9"
markdown-it-py = "3.0.0"
markupsafe = "3.0.2"
mdurl = "0.1.2"
more-itertools = "10.6.0"
msgpack = "1.1.0"
multidict = "6.1.0"
mypy-extensions = "1.0.0"
nodeenv = "1.9.1"
numpy = "2.2.3"
openai = "1.69.0"
openpyxl = "3.1.5"
opentelemetry-api = "1.27.0"
opentelemetry-exporter-otlp = "1.27.0"
opentelemetry-exporter-otlp-proto-common = "1.27.0"
opentelemetry-exporter-otlp-proto-grpc = "1.27.0"
opentelemetry-exporter-otlp-proto-http = "1.27.0"
opentelemetry-instrumentation = "0.48b0"
opentelemetry-instrumentation-asgi = "0.48b0"
opentelemetry-instrumentation-fastapi = "0.48b0"
opentelemetry-proto = "1.27.0"
opentelemetry-sdk = "1.27.0"
opentelemetry-semantic-conventions = "0.48b0"
opentelemetry-util-http = "0.48b0"
packaging = "24.2"
pandas = "2.2.3"
pathspec = "0.12.1"
pbs-installer = "2025.3.17"
pkginfo = "1.12.1.2"
platformdirs = "4.3.6"
pluggy = "1.5.0"
poetry = "2.1.1"
poetry-core = "2.1.1"
pre-commit = "3.8.0"
pre-commit-hooks = "4.6.0"
prometheus-client = "0.21.1"
prompt-toolkit = "3.0.50"
propcache = "0.3.0"
protobuf = "4.25.6"
psycopg2-binary = "2.9.10"
pyarrow = "18.1.0"
pydantic = "2.10.6"
pydantic-extra-types = "2.10.3"
pydantic-settings = "2.8.1"
pydantic-core = "2.27.2"
pygments = "2.19.1"
pyinstrument = "5.0.1"
pyjwt = "2.10.1"
pyproject-hooks = "1.2.0"
python-dateutil = "2.9.0.post0"
python-dotenv = "1.0.1"
python-multipart = "0.0.9"
pytz = "2025.1"
pywin32-ctypes = "0.2.3"
pyyaml = "6.0.2"
rapidfuzz = "3.12.2"
redis = "5.2.1"
requests = "2.32.3"
requests-toolbelt = "1.0.0"
rich = "13.9.4"
rich-toolkit = "0.13.2"
ruamel-yaml = "0.18.10"
ruamel-yaml-clib = "0.2.12"
setuptools = "76.0.0"
shellingham = "1.5.4"
six = "1.17.0"
sniffio = "1.3.1"
sqlalchemy = "2.0.39"
sqlparse = "0.5.3"
starlette = "0.46.2"
tomlkit = "0.13.2"
tornado = "6.4.2"
tqdm = "4.67.1"
trove-classifiers = "2025.3.19.19"
typer = "0.15.2"
typing-inspection = "0.4.0"
typing-extensions = "4.12.2"
tzdata = "2025.2"
uptrace = "1.27.0"
urllib3 = "2.3.0"
uvicorn = "0.30.6"
vine = "5.1.0"
virtualenv = "20.29.3"
watchfiles = "1.0.4"
wcwidth = "0.2.13"
websockets = "15.0.1"
werkzeug = "3.1.3"
wrapt = "1.17.2"
xlsxwriter = "3.2.2"
yarl = "1.18.3"
zipp = "3.21.0"
zstandard = "0.23.0"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
mypy = "^1.11.2"
ruff = "^0.6.3"
isort = "^5.13.2"
pre-commit-hooks = "^4.6.0"
black = "^24.8.0"
pre-commit = "^3.8.0"
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
httpx = "^0.27.2"
pytest-asyncio = "^0.24.0"
factory-boy = "^3.3.1"


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    "*/__init__.py",
    "*/schema/*",
    "*/tests/*",
    "*/router.py",
    "*/schemas.py",
    "*/migrations/*",
    "src/translations/*",
    "*/replen_optimizer/tasks.py",
    "*/general/management/*",
    "*/exceptions/*",
    "*/calculators/*",
    ".gitignore",
    "*.env*",
    "*/.gitlab*",
    "*/Dockerfile",
    "*/alembic*",
    "*/docker-*",
    "*/README*",
    "*/CHANGELOG.md",
    "app/alembic/*",
    "*/migrations/"
]

line-length = 108
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
# Rules for ruff here --> https://docs.astral.sh/ruff/rules/
select = ["E", "F", "W", "D"]  # Default + iSort + Pydocstyle

# Skip unused variable rules
# Excluded as unsupported "E121", "E123", "E126", "E127", "W503", "W504"
ignore = [
    "D100", "D101", "D102", "D103", "D104", "D105",
    "D106", "D107", "D200", "D204", "D205", "D400",
    "E731", "E722", "F821", "E402", "F405", "F403",
    "D208", "E203",
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F405"]

[tool.ruff.lint.pydocstyle]
convention = "pep257"  # Accepts: "google", "numpy", or "pep257".

[tool.ruff.lint.pycodestyle]
max-line-length = 108 # Настройка длины из flake8 setup.cfg

[tool.black]
line-length = 108
target-version = ["py312"]

[tool.isort]
profile = "black"
line_length = 108

known_first_party = ["config", "infrastructure", "domain", "application", "api"]
known_third_party = ["fastapi", "sqlalchemy", "pydantic", "dependency_injector"]

# Порядок секций (без дубликатов)
sections = [
    "FUTURE",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER",
]

skip_glob = ["*/migrations/*", "*/alembic/*"]

[tool.mypy]
python_version = "3.12"
disallow_untyped_defs = true
ignore_missing_imports = true
show_error_codes = true
no_implicit_optional = true
explicit_package_bases=true
mypy_path = ["./src"]
exclude = [
  ".venv",
  "venv",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-vv -ra --cov=src --cov-branch --cov-report=term --cov-report=html --cov-report=xml"
log_cli = false
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore:Unmanaged access of declarative attribute.*:sqlalchemy.exc.SAWarning",
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"

[tool.coverage.run]
source = ["src"]
omit = [
    "**/__init__.py",
    "src/main.py",
    "src/worker.py",
    "**/base.py",
    "**/interfaces/*.py",
    "**/fake/*.py",
    "**/fake.py",
    "src/config/*",
    "**/db.py",
    "**/schemas.py",
    "**/models/**",
    "**/exceptions.py",
    "**/dto.py",
    "**/enums.py",
    "**/factories/**",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "__init__",
    "from .* import .*",
    "router = .*",
]
